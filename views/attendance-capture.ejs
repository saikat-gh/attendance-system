<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .attendance-capture-form-container {
            background-color: rgb(241, 241, 207);
            border: 1px solid brown;
            max-width: 100%; /* Allow full width for small screens */
            margin: 0 auto;
            padding: 10px; /* Add padding for better mobile spacing */
        }

        h3, h5 {
            text-align: center;
            margin: 5px 0;
        }

        .top-container {
            display: flex;
            flex-wrap: wrap; /* Enable wrapping for smaller screens */
            gap: 10px; /* Add spacing between containers */
        }

        .left-container,
        .right-container {
            flex: 1 1 45%; /* Allow containers to share space evenly */
            border: 1px solid black;
            padding: 5px;
        }

        .image img {
            width: 100%; /* Make image responsive */
            max-height: 180px; /* Limit height */
            object-fit: cover;
            border: 1px solid black;
        }

        #curDate, #clock {
            font-size: 18px; /* Adjust font size for mobile */
            font-weight: bold;
            text-align: center;
            width: 100%;
        }

        .mid-container {
            width: 100%;
            margin-top: 10px;
            border: 1px solid black;
            padding: 5px;
        }

        .bottom-container {
            display: flex;
            flex-direction: column;
            gap: 10px;
            width: 100%;
            padding: 10px;
        }

        #video {
            width: 100%; /* Make video responsive */
            max-height: 200px; /* Limit height */
            object-fit: cover;
            border: 1px solid black;
            box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.3);
        }

        .camera-btn-grp, .btn-grp {
            display: flex;
            justify-content: space-between;
            gap: 10px;
            flex-wrap: wrap;
        }

        button {
            flex: 1 1 45%; /* Make buttons responsive */
            padding: 10px;
            border-radius: 4px;
            font-size: 14px;
            font-weight: bold;
            text-align: center;
            cursor: pointer;
        }

        #start-btn {
            background-color: springgreen;
        }

        #capture-btn {
            background-color: #4070f4;
            color: white;
        }

        #submit-btn {
            background-color: green;
            color: white;
        }

        #cancel-btn {
            background-color: red;
            color: white;
        }

        @media (max-width: 480px) {
            h3, h5 {
                font-size: 16px;
            }

            button {
                font-size: 12px;
            }

            #curDate, #clock {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="attendance-capture-form-container">
        <h3> Attendance Entry </h3>
        <h5> <%= empName %> </h5>
        <h5> <%= location %> </h5>
        <%= otherData[0].location_id %>
        <%= otherData[0].lat %>
        <%= otherData[0].long %>
        <form class = "attendance-submit-form">
            <div class="top-container">
                <div class="left-container">
                    <div class="image">
                        <img src="<%= otherData[0].fotourl %>" alt="Italian Trulli">
                    </div>
                </div>
                <div class="right-container">
                    <label>Today : </label>
                    <input type="text" id="curDate" readonly>
                    <label>Now :</label>
                    <div id="clock"></div>
                    <label>Your Current Location</label><br>
                    <lable>Latitude</lable>
                    <div id="curLat"></div>
                    <label>Longitude</label>
                    <div id="curLong"></div>
                </div>
            </div>
            <div class="mid-container">

            </div>
            <div class="bottom-container">
                <div class="camera-container">
                    <video id="video" autoplay playsinline></video>
                    <div class="camera-btn-grp">
                        <button id="start-btn" name="start-btn" type="button">Start Camera</button>
                        <button id="capture-btn" name="capture-btn" type="button">Capture Photo</button>
                    </div>       
                    <canvas id="canvas" style="display: none;"></canvas>
                </div>
                <div class="btn-grp">
                    <button id="submit-btn" name="submit-btn" type="button">Submit</button>           
                    <button id="cancel-btn" name="cancel-btn" type="button">Cancel</button>           
                </div>
            </div>
        </form>
    </div>
    <script>
        // Get the current date
        const currentDate = new Date();

        // Helper function to format the date
        function formatDate(date) {
            const day = String(date.getDate()).padStart(2, '0'); // Get day (2 digits)
            const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            const month = monthNames[date.getMonth()]; // Get month name
            const year = date.getFullYear(); // Get year
            return `${day}-${month}-${year}`; // Return formatted date
        }

        // Format the current date
        const formattedDate = formatDate(currentDate);

        // Display the date in the input field
        document.getElementById('curDate').value = formattedDate;

        // Function to format and display the time
        function displayTime() {
            const now = new Date();

            // Extract hours, minutes, and seconds
            const hours = String(now.getHours()).padStart(2, '0');
            const minutes = String(now.getMinutes()).padStart(2, '0');
            const seconds = String(now.getSeconds()).padStart(2, '0');

            // Format the time as HH:MM:SS
            const timeString = `${hours}:${minutes}:${seconds}`;

            // Display the time in the clock div
            document.getElementById('clock').textContent = timeString;
        }

        // Initial display
        displayTime();

        // Update the time every second
        setInterval(displayTime, 1000);        

        function displayLocation() {
            if (navigator.geolocation) {
                // Get the current position
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const latitude = position.coords.latitude;
                        const longitude = position.coords.longitude;

                        document.getElementById('curLat').textContent = latitude;
                        document.getElementById('curLong').textContent = longitude;
                    },
                    (error) => {
                        // Handle errors
                        switch (error.code) {
                            case error.PERMISSION_DENIED:
                                output.textContent = "User denied the request for Geolocation.";
                                break;
                            case error.POSITION_UNAVAILABLE:
                                output.textContent = "Location information is unavailable.";
                                break;
                            case error.TIMEOUT:
                                output.textContent = "The request to get user location timed out.";
                                break;
                            default:
                                output.textContent = "An unknown error occurred.";
                                break;
                        }
                        console.error('Error fetching location:', error);
                    }
                );
            } else {
                output.textContent = "Geolocation is not supported by this browser.";
            }
        }

        displayLocation();

        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureBtn = document.getElementById('capture-btn');
        const startBtn = document.getElementById('start-btn');
        const imageBx = document.getElementById('image-box'); // Where the captured image will be displayed
        let capturedBlob = null; // To store the captured image blob

        // Request access to the camera
        async function startCamera() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ video: true });
                video.srcObject = stream;
            } catch (error) {
                console.error('Error accessing the camera: ', error);
            }
        }

        startBtn.addEventListener('click', (event) => {
            event.preventDefault(); // Prevent form submission
            startCamera();
        });
    </script>
</body>
